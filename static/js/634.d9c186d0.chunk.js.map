{"version":3,"file":"static/js/634.d9c186d0.chunk.js","mappings":"yRAGaA,EAAaC,EAAAA,GAAAA,KAAH,0QAcVC,EAAkBD,EAAAA,GAAAA,MAAH,uOAyBfE,GAZqBF,EAAAA,GAAAA,KAAH,6MAYNA,EAAAA,GAAAA,GAAH,yGAMTG,EAAYH,EAAAA,GAAAA,GAAH,kMAUTI,EAAgBJ,EAAAA,GAAAA,OAAH,mSAkBbK,EAAYL,EAAAA,GAAAA,EAAH,iIAOTM,EAAQN,EAAAA,GAAAA,EAAH,8KASLO,GAAYP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,kD,mBCNtB,EArEe,WAAO,IAAD,EACbS,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GACZ,OAAsCI,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQ,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAC9CC,EAAAA,EAAAA,YAAU,WACR,GAAiB,KAAbF,EAAJ,CACA,IAAMG,EAAuB,KAAVR,EAAeA,EAAQK,GAC1CI,EAAAA,EAAAA,IAAoBD,GAAYE,MAAK,SAAAC,GACnCZ,EAAeY,EAAMC,QACtB,GAJ0B,CAK5B,GAAE,CAACP,EAAUL,IAoBd,OACE,UAACa,EAAA,EAAD,CAAMC,GAAG,OAAT,WACE,UAACjC,EAAD,CAAYkC,SAhBK,SAAAC,IACnBA,EAAEC,iBAEyB,KAAvBrB,EAAYsB,SAIhBrB,EAAe,IAEfO,EADmC,KAAhBR,EAAqB,CAAEuB,MAAOvB,GAAgB,CAAC,GAElEK,EAASL,GACTG,EAAe,KAPbqB,MAAM,4BAQT,EAIG,WACE,SAACrC,EAAD,CACEsC,KAAK,OACLC,aAAa,MACbC,YAAY,gBACZC,SAzBkB,SAAAR,GACxBnB,EAAemB,EAAES,OAAOzB,MAAM0B,cAC/B,KAyBK,SAACxC,EAAD,CAAemC,KAAK,SAApB,UACE,SAAC,MAAD,UAIJ,SAACrC,EAAD,UACGc,EAAY6B,KAAI,WAA2CC,GAA3C,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAA3B,OACf,UAAC/C,EAAD,YACE,UAACI,EAAD,CAAW4C,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAM5C,GAAYuC,GAAIA,EAAvD,WACE,gBACEM,IAAG,yCAAoCL,GACvCM,MAAO,IACPC,IAAI,MAEN,SAAClD,EAAD,UAAQyC,QAEV,UAAC1C,EAAD,WAAW,iBACM,IAAIoD,KAAKP,GAAcQ,0BAV1BZ,EADD,QAkBxB,C","sources":["components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const SearchForm = styled.form`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 500px;\n  background-color: white;\n  border-radius: 10px;\n  overflow: hidden;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  border: none;\n  outline: none;\n  padding-left: 5px;\n  padding-right: 5px;\n  &::placeholder {\n    font: inherit;\n    font-size: 15px;\n  }\n`;\nexport const SearchFormBtnLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\nexport const MovieCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  background: white;\n  max-width: 250px;\n  justify-content: space-between;\n  &:hover {\n    transform: scale(1.06);\n  }\n`;\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n\n  background-color: blue;\n\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const MovieDesc = styled.p`\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-top: 5px;\n  margin-bottom: 10px;\n  color: grey;\n`;\nexport const Title = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  color: black;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-top: 10px;\n  text-decoration: none;\n`;\nexport const TitleLink = styled(NavLink)`\n  text-decoration: none;\n`;\n","import { Cont } from 'components/Cont';\nimport { useState, useEffect } from 'react';\nimport { BsSearch } from 'react-icons/bs';\nimport { useLocation } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport {\n  SearchForm,\n  SearchFormBtn,\n  SearchFormInput,\n  MovieCard,\n  MovieList,\n  TitleLink,\n  MovieDesc,\n  Title,\n} from './Movies.styled';\nimport { fetchMoviesBySearch } from 'API/API';\n\nconst Movies = () => {\n  const location = useLocation();\n  console.log(location);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchMovie, setSearchMovie] = useState([]);\n  const [value, setValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const urlValue = searchParams.get('query') ?? '';\n  useEffect(() => {\n    if (urlValue === '') return;\n    const queryValue = value !== '' ? value : urlValue;\n    fetchMoviesBySearch(queryValue).then(movie => {\n      setSearchMovie(movie.results);\n    });\n  }, [urlValue, value]);\n\n  const handleQueryChange = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      alert('Write the correct name!!!');\n      return;\n    }\n    setSearchQuery('');\n    const nextParams = searchQuery !== '' ? { query: searchQuery } : {};\n    setSearchParams(nextParams);\n    setValue(searchQuery);\n    setSearchMovie([]);\n  };\n\n  return (\n    <Cont as=\"main\">\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Search movies\"\n          onChange={handleQueryChange}\n        />\n        <SearchFormBtn type=\"submit\">\n          <BsSearch />\n        </SearchFormBtn>\n      </SearchForm>\n\n      <MovieList>\n        {searchMovie.map(({ title, id, poster_path, release_date }, index) => (\n          <MovieCard key={index}>\n            <TitleLink to={`${id}`} state={{ from: location }} id={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                width={250}\n                alt=\"\"\n              />\n              <Title>{title}</Title>\n            </TitleLink>\n            <MovieDesc>\n              Release date: {new Date(release_date).toLocaleDateString()}\n            </MovieDesc>\n          </MovieCard>\n        ))}\n      </MovieList>\n    </Cont>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchForm","styled","SearchFormInput","MovieList","MovieCard","SearchFormBtn","MovieDesc","Title","TitleLink","NavLink","location","useLocation","console","log","useState","searchQuery","setSearchQuery","searchMovie","setSearchMovie","value","setValue","useSearchParams","searchParams","setSearchParams","urlValue","get","useEffect","queryValue","fetchMoviesBySearch","then","movie","results","Cont","as","onSubmit","e","preventDefault","trim","query","alert","type","autoComplete","placeholder","onChange","target","toLowerCase","map","index","title","id","poster_path","release_date","to","state","from","src","width","alt","Date","toLocaleDateString"],"sourceRoot":""}