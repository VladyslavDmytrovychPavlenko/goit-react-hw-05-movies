{"version":3,"file":"static/js/947.d5bd2bf2.chunk.js","mappings":"sPA8FMA,EAAkB,CACtBC,gBAAiB,OACjBC,OAAQ,OACRC,QAAS,YACTC,aAAc,MACdC,OAAQ,WAEV,UA9FsB,WAAO,IAAD,IAC1B,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAcC,EAAAA,EAAAA,QAAM,oBAACL,EAASM,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAMnD,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBP,GAASQ,KAAKX,EAClC,GAAE,CAACG,KAECJ,EACH,OAAO,KAGT,IAAQa,EACNb,EADMa,YAAaC,EACnBd,EADmBc,aAAcC,EACjCf,EADiCe,WAAYC,EAC7ChB,EAD6CgB,SAAUC,EACvDjB,EADuDiB,OAAQC,EAC/DlB,EAD+DkB,MAGjE,OACE,UAAC,IAAD,CAAMC,GAAG,OAAT,WACE,SAAC,KAAD,CAASC,GAAId,EAAYe,QAAzB,UACE,mBAAQC,KAAK,SAASC,MAAO9B,EAA7B,SAA8C,eAIhD,UAAC,IAAD,CACE0B,GAAG,UACHK,GAAI,GACJC,GAAI,GACJC,aAAa,iBACbC,QAAQ,OALV,WAOE,gBACEC,IAAG,yCAAoCf,GACvCgB,MAAO,IACPC,IAAI,MAEN,UAAC,IAAD,CACEX,GAAG,MACHQ,QAAQ,OACRI,cAAc,SACdC,QAAS,GACTH,MAAO,IACPI,YAAY,OANd,WAQE,wBAAKf,KACL,UAAC,IAAD,CAAMC,GAAG,MAAMQ,QAAQ,OAAOI,cAAc,SAASC,QAAS,GAA9D,WACE,yBAAG,iBAAe,IAAIE,KAAKpB,GAAcqB,yBACzC,yBAAG,eAAaC,OAAOrB,GAAYsB,QAAQ,GAAG,WAGhD,UAAC,IAAD,CAAMlB,GAAG,MAAMQ,QAAQ,OAAOI,cAAc,SAASC,QAAS,GAA9D,WACE,wBAAI,eACJ,uBAAIhB,QAEN,UAAC,IAAD,CAAMG,GAAG,MAAMQ,QAAQ,OAAOI,cAAc,SAASC,QAAS,GAA9D,WACE,wBAAI,aACJ,uBAAIf,EAAOqB,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,iBAI9C,UAAC,IAAD,CACEb,QAAQ,OACRR,GAAG,UACHsB,eAAe,SACfjB,GAAI,GACJC,GAAI,GACJC,aAAa,iBACbgB,WAAW,SACXV,QAAS,GARX,WAUE,wBAAI,6BACJ,SAACW,EAAD,CAASvB,GAAE,OAAX,SAAqB,UACrB,SAACuB,EAAD,CAASvB,GAAE,UAAX,SAAwB,gBAE1B,SAAC,EAAAwB,SAAD,CACEC,UACE,0BACE,SAAC,KAAD,CAAMC,MAAM,OAAOC,OAAQ,GAAIlB,MAAO,OAH5C,UAOE,SAAC,KAAD,QAIP,EAWD,IAAMc,GAAUK,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4J","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { NavLink, Outlet, useParams, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useState, useEffect, Suspense, useRef } from 'react';\nimport { Cont } from 'components/Cont';\nimport { fetchMoviesDetails } from 'API/API';\nimport { Puff } from 'react-loader-spinner';\n\nconst MoviesDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const { movieId } = useParams();\n  const searchQuery = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    fetchMoviesDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { poster_path, release_date, popularity, overview, genres, title } =\n    movie;\n\n  return (\n    <Cont as=\"main\">\n      <NavLink to={searchQuery.current}>\n        <button type=\"button\" style={backButtonStyle}>\n          Go Back\n        </button>\n      </NavLink>\n      <Cont\n        as=\"section\"\n        pt={15}\n        pb={15}\n        borderBottom=\"2px solid blue\"\n        display=\"flex\"\n      >\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          width={300}\n          alt=\"\"\n        />\n        <Cont\n          as=\"div\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          gridGap={20}\n          width={900}\n          paddingLeft=\"20px\"\n        >\n          <h1>{title}</h1>\n          <Cont as=\"div\" display=\"flex\" flexDirection=\"column\" gridGap={10}>\n            <p>Release date: {new Date(release_date).toLocaleDateString()}</p>\n            <p>User score: {Number(popularity).toFixed(0)}%</p>\n          </Cont>\n\n          <Cont as=\"div\" display=\"flex\" flexDirection=\"column\" gridGap={10}>\n            <h2>Overview:</h2>\n            <p>{overview}</p>\n          </Cont>\n          <Cont as=\"div\" display=\"flex\" flexDirection=\"column\" gridGap={10}>\n            <h2>Genres:</h2>\n            <p>{genres.map(({ name }) => name).join(' ')}</p>\n          </Cont>\n        </Cont>\n      </Cont>\n      <Cont\n        display=\"flex\"\n        as=\"section\"\n        justifyContent=\"center\"\n        pt={15}\n        pb={15}\n        borderBottom=\"2px solid blue\"\n        alignItems=\"center\"\n        gridGap={10}\n      >\n        <h3>Additional information:</h3>\n        <NavItem to={`cast`}>Cast</NavItem>\n        <NavItem to={`reviews`}>Reviews</NavItem>\n      </Cont>\n      <Suspense\n        fallback={\n          <div>\n            <Puff color=\"blue\" height={80} width={80} />\n          </div>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </Cont>\n  );\n};\n\nconst backButtonStyle = {\n  backgroundColor: 'blue',\n  border: 'none',\n  padding: '10px 15px',\n  borderRadius: '4px',\n  cursor: 'pointer',\n};\nexport default MoviesDetails;\n// style\nconst NavItem = styled(NavLink)`\n  color: black;\n  font-size: 25px;\n\n  &.active {\n    color: blue;\n  }\n\n  :hover:not(.active) {\n    color: yellowgreen;\n  }\n`;\n"],"names":["backButtonStyle","backgroundColor","border","padding","borderRadius","cursor","useState","movie","setMovie","location","useLocation","movieId","useParams","searchQuery","useRef","state","from","useEffect","fetchMoviesDetails","then","poster_path","release_date","popularity","overview","genres","title","as","to","current","type","style","pt","pb","borderBottom","display","src","width","alt","flexDirection","gridGap","paddingLeft","Date","toLocaleDateString","Number","toFixed","map","name","join","justifyContent","alignItems","NavItem","Suspense","fallback","color","height","styled","NavLink"],"sourceRoot":""}