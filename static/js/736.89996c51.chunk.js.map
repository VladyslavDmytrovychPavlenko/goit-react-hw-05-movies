{"version":3,"file":"static/js/736.89996c51.chunk.js","mappings":"qQAEaA,EAAWC,EAAAA,GAAAA,GAAH,4EAKRC,EAAWD,EAAAA,GAAAA,GAAH,wMAWRE,EAAWF,EAAAA,GAAAA,EAAH,iIAORG,EAAWH,EAAAA,GAAAA,EAAH,oJ,mBC4CrB,EA9Da,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,GACbS,KAAKL,GACLM,OAAM,kBAAMJ,GAAS,EAAf,GACV,GAAE,CAACN,IAEAK,GAEA,SAACM,EAAA,EAAD,CACEC,GAAG,UACHC,MAAO,CACLC,UAAW,QACXC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UANhB,UASE,uBAAG,gCAKJd,GAiBH,SAACQ,EAAA,EAAD,CAAMC,GAAG,UAAT,UACE,SAACjB,EAAD,UACGQ,EAAKA,KAAKe,KAAI,WAAoCC,GAApC,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAApB,OACb,UAACzB,EAAD,YACE,gBACE0B,IAAG,yCAAoCD,GACvCE,MAAO,IACPC,IAAI,MAEN,SAAC1B,EAAD,UAAWqB,KACX,UAACtB,EAAD,WAAU,SAAOuB,OAPJF,EADF,SAjBjB,SAACR,EAAA,EAAD,CACEC,GAAG,UACHC,MAAO,CACLC,UAAW,QACXC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UANhB,UASE,SAACS,EAAA,EAAD,CAAYC,MAAM,OAAOC,KAAM,MAsBtC,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\nexport const CastCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  max-width: 200px;\n  justify-content: space-between;\n  &:hover {\n    transform: scale(1.06);\n  }\n`;\n\nexport const CastChar = styled.p`\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-top: 5px;\n  margin-bottom: 10px;\n  color: grey;\n`;\nexport const CastName = styled.p`\n  font-size: 18px;\n  font-weight: 600;\n  color: black;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-top: 10px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Cont } from 'components/Cont';\nimport { fetchMoviesCast } from 'API/API';\nimport { CastCard, CastList, CastName, CastChar } from './Cast.styled';\nimport { BeatLoader } from 'react-spinners';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    fetchMoviesCast(movieId)\n      .then(setCast)\n      .catch(() => setError(true));\n  }, [movieId]);\n\n  if (error) {\n    return (\n      <Cont\n        as=\"section\"\n        style={{\n          minHeight: '200px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <p>Error 404: Cast not found</p>\n      </Cont>\n    );\n  }\n\n  if (!cast) {\n    return (\n      <Cont\n        as=\"section\"\n        style={{\n          minHeight: '200px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <BeatLoader color=\"blue\" size={15} />\n      </Cont>\n    );\n  }\n\n  return (\n    <Cont as=\"section\">\n      <CastList>\n        {cast.cast.map(({ name, character, profile_path }, index) => (\n          <CastCard key={index}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n              width={200}\n              alt=\"\"\n            />\n            <CastName>{name}</CastName>\n            <CastChar>char: {character}</CastChar>\n          </CastCard>\n        ))}\n      </CastList>\n    </Cont>\n  );\n};\n\nexport default Cast;\n"],"names":["CastList","styled","CastCard","CastChar","CastName","movieId","useParams","useState","cast","setCast","error","setError","useEffect","fetchMoviesCast","then","catch","Cont","as","style","minHeight","display","justifyContent","alignItems","map","index","name","character","profile_path","src","width","alt","BeatLoader","color","size"],"sourceRoot":""}