{"version":3,"file":"static/js/186.b7e139ad.chunk.js","mappings":"sNA+DA,UAzDgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBR,GAChBS,KAAKL,GACLM,OAAM,kBAAMJ,GAAS,EAAf,GACV,GAAE,CAACN,IAEAK,GAEA,SAAC,IAAD,CACEM,GAAG,UACHC,MAAO,CACLC,UAAW,QACXC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UANhB,UASE,uBAAG,mCAKJb,GAiBH,SAAC,IAAD,CAAMQ,GAAG,UAAT,UACE,SAAC,IAAD,CAAMA,GAAG,KAAKG,QAAQ,OAAOG,cAAc,SAASC,QAAS,GAAIC,EAAG,EAApE,SACGhB,EAAOiB,QAAQC,KAAI,WAAsBC,GAAtB,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OAClB,2BACE,0BAAI,WAASD,MACb,uBAAIC,MAFGF,EADS,SAjBtB,SAAC,IAAD,CACEX,GAAG,UACHC,MAAO,CACLC,UAAW,QACXC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UANhB,UASE,SAAC,IAAD,CAAYS,MAAM,OAAOC,KAAM,MAiBtC,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Cont } from 'components/Cont';\nimport { fetchMoviesReviews } from 'API/API';\nimport { BeatLoader } from 'react-spinners';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState(null);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    fetchMoviesReviews(movieId)\n      .then(setReview)\n      .catch(() => setError(true));\n  }, [movieId]);\n\n  if (error) {\n    return (\n      <Cont\n        as=\"section\"\n        style={{\n          minHeight: '200px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <p>Error 404: Reviews not found</p>\n      </Cont>\n    );\n  }\n\n  if (!review) {\n    return (\n      <Cont\n        as=\"section\"\n        style={{\n          minHeight: '200px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <BeatLoader color=\"blue\" size={15} />\n      </Cont>\n    );\n  }\n\n  return (\n    <Cont as=\"section\">\n      <Cont as=\"ul\" display=\"flex\" flexDirection=\"column\" gridGap={15} p={0}>\n        {review.results.map(({ author, content }, index) => (\n          <li key={index}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        ))}\n      </Cont>\n    </Cont>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","review","setReview","error","setError","useEffect","fetchMoviesReviews","then","catch","as","style","minHeight","display","justifyContent","alignItems","flexDirection","gridGap","p","results","map","index","author","content","color","size"],"sourceRoot":""}